<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGiAAAAEAIACoDQAAFgAAACgAAAAaAAAAQAAAAAEAIAAAAAAAAA0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEgAAACIAAAAGAAAAAAAAAAAAAAAAAAAABwAAADIAAAA4AAAADQAAAAAAAAAAAAAAAAAA
        ABYAAABsAAAAjQAAAEgAAAAIAAAAAAAAAAAAAAAVAAAAkQAAAO0AAADMAAAALwAAACUAAACyAAAA1AAA
        AJcAAAAkAAAAAAAAAB0AAACVAAAA1AAAANMAAACzAAAASwAAABEAAAA8AAAAuQAAAMgAAACsAAAA1AAA
        AKMAAABEAAAARwAAALYAAADCAAAAVAAAALAAAACaAAAAkgAAALUAAABGAAAArAAAAM8AAACUAAAAyQAA
        ALMAAAA5AAAAKwAAAIUAAADSAAAAywAAANYAAACNAAAAGQAAAAIAAAAwAAAAmAAAANAAAADRAAAAjQAA
        ABsAAAAAAAAAXwAAANYAAADQAAAAZwAAAAAAAAAMAAAAXQAAAJsAAABqAAAAEQAAAAAAAAAAAAAAAgAA
        ACQAAABRAAAANAAAAAUAAAAAAAAAAAAAAAAAAAAEAAAAHAAAABwAAAADAAAAAAAAAAAAAAA/AAAA5wAA
        AOUAAABFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAADrAAAA6gAAADYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAAOsAAADrAAAAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAA4AAAA6QAAAOsAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAADkAAAA6AAA
        ADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVQAAANsAAADkAAAARQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABqAAAAygAAANsAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIMAAACzAAAAzgAAAGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAngAAAJUAAAC6AAAAfAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAC2AAAAcwAAAKEAAACTAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAAMcAAABQAAAAgwAAAKoAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAzwAA
        ADEAAABjAAAAvwAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>